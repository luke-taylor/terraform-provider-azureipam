// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package resource_reservation

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"regexp"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
)

func ReservationResourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Attributes: map[string]schema.Attribute{
			"block": schema.StringAttribute{
				Required: 					true,
				Description:         "Name of the target Block",
				MarkdownDescription: "Name of the target Block",
			},
			"cidr": schema.StringAttribute{
				Optional: true,
				Computed: true,
				Validators: []validator.String{
					stringvalidator.RegexMatches(regexp.MustCompile("x.x.x.x/x"), ""),
				},
			},
			"created_by": schema.StringAttribute{
				Computed: true,
			},
			"created_on": schema.NumberAttribute{
				Computed: true,
			},
			"desc": schema.StringAttribute{
				Optional: true,
				Computed: true,
			},
			"id": schema.StringAttribute{
				Computed: true,
			},
			"reservation": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "ID of the target Reservation",
				MarkdownDescription: "ID of the target Reservation",
			},
			"reverse_search": schema.BoolAttribute{
				Optional: true,
				Computed: true,
			},
			"settled_by": schema.StringAttribute{
				Computed: true,
			},
			"settled_on": schema.NumberAttribute{
				Computed: true,
			},
			"size": schema.Int64Attribute{
				Optional: true,
				Computed: true,
			},
			"smallest_cidr": schema.BoolAttribute{
				Optional: true,
				Computed: true,
			},
			"space": schema.StringAttribute{
				Required: 					true,
				Description:         "Name of the target Space",
				MarkdownDescription: "Name of the target Space",
			},
			"status": schema.StringAttribute{
				Computed: true,
			},
			"tag": schema.MapAttribute{
				ElementType: types.StringType,
				Computed:    true,
			},
		},
	}
}

type ReservationModel struct {
	Block         types.String `tfsdk:"block"`
	Cidr          types.String `tfsdk:"cidr"`
	CreatedBy     types.String `tfsdk:"created_by"`
	CreatedOn     types.Number `tfsdk:"created_on"`
	Desc          types.String `tfsdk:"desc"`
	Id            types.String `tfsdk:"id"`
	Reservation   types.String `tfsdk:"reservation"`
	ReverseSearch types.Bool   `tfsdk:"reverse_search"`
	SettledBy     types.String `tfsdk:"settled_by"`
	SettledOn     types.Number `tfsdk:"settled_on"`
	Size          types.Int64  `tfsdk:"size"`
	SmallestCidr  types.Bool   `tfsdk:"smallest_cidr"`
	Space         types.String `tfsdk:"space"`
	Status        types.String `tfsdk:"status"`
	Tag           types.Map    `tfsdk:"tag"`
}
